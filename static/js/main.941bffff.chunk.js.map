{"version":3,"sources":["SortingAlgorithms/MergeSort.js","SortingAlgorithms/QuickSort.js","SortingAlgorithms/HeapSort.js","SortingAlgorithms/BubbleSort.js","SortingAlgorithms/SelectionSort.js","SortingVisualizer/SortingVisualizer.jsx","SortingAlgorithms/InsertionSort.js","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxillaryArray","slice","mergeSortHelper","aux","start","end","mid","Math","floor","i","j","k","push","merge","getQuickSortAnimations","quickSortHelper","partitionIndex","pivot","newHeight","newHeight2","pivotValue","swap","partition","index1","index2","temp","array_length","getBubbleSortAnimations","len","bubbleSort","getSelectionSortAnimations","min","selectionSort","getHeapSortAnimations","arr","heapify","heapSort","left","right","max","SortingVisualizer","props","handleSliderChange","event","newValue","setState","value","state","this","resetArray","random","MergeSort","arrayBars","document","getElementsByClassName","a","b","color","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","height","QuickSort","insertionSort","InsertionSort","barOneIndex","BubbleSort","SelectionSort","console","log","HeapSort","className","AppBar","position","Toolbar","variant","Typography","align","map","index","key","Button","onClick","margin","mergeSort","quickSort","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","step","marks","width","aria-labelledby","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.941bffff.chunk.js","sourcesContent":["// MERGESORT\n\nexport function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxillaryArray = array.slice();\n  mergeSortHelper(array, auxillaryArray, animations, 0, array.length - 1);\n  return animations;\n}\n\nfunction mergeSortHelper(array, aux, animations, start, end) {\n  if (start === end) return;\n  const mid = Math.floor((start + end) / 2);\n\n  mergeSortHelper(aux, array, animations, start, mid);\n  mergeSortHelper(aux, array, animations, mid + 1, end);\n  merge(array, aux, animations, start, mid, end);\n}\n\nfunction merge(array, aux, animations, start, mid, end) {\n  let i = start,\n    j = mid + 1,\n    k = start;\n\n  while (i <= mid && j <= end) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (aux[i] <= aux[j]) {\n      animations.push([k, aux[i]]);\n      array[k++] = aux[i++];\n    } else {\n      animations.push([k, aux[j]]);\n      array[k++] = aux[j++];\n    }\n  }\n\n  while (i <= mid) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, aux[i]]);\n    array[k++] = aux[i++];\n  }\n\n  while (j <= end) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, aux[j]]);\n    array[k++] = aux[j++];\n  }\n}\n","// QUICKSORT\n// Video on how quicksort works: https://www.youtube.com/watch?v=MZaf_9IZCrc\nexport function getQuickSortAnimations(array) {\n  if (array.length <= 1) return array;\n  const animations = [];\n  quickSortHelper(array, 0, array.length - 1, animations);\n  return animations;\n}\n\nfunction quickSortHelper(array, start, end, animations) {\n  var pivot, partitionIndex;\n\n  if (start < end) {\n    pivot = end;\n    partitionIndex = partition(array, pivot, start, end, animations);\n\n    quickSortHelper(array, start, partitionIndex - 1, animations);\n    quickSortHelper(array, partitionIndex + 1, end, animations);\n  }\n}\n\nfunction partition(array, pivot, start, end, animations) {\n  var pivotValue = array[pivot],\n    partitionIndex = start;\n\n  let newHeight, newHeight2;\n  for (var i = start; i < end; i++) {\n    animations.push([i, pivot]);\n    animations.push([i, pivot]);\n\n    if (array[i] < pivotValue) {\n      newHeight = array[i];\n      newHeight2 = array[partitionIndex];\n      animations.push([i, newHeight2]);\n      animations.push([partitionIndex, newHeight]);\n      swap(array, i, partitionIndex);\n      partitionIndex++;\n    } else {\n      animations.push([null, null]);\n      animations.push([null, null]);\n    }\n  }\n  newHeight = array[end];\n  newHeight2 = array[partitionIndex];\n\n  animations.push([end, partitionIndex]);\n  animations.push([end, partitionIndex]);\n  animations.push([end, newHeight2]);\n  animations.push([partitionIndex, newHeight]);\n  swap(array, end, partitionIndex);\n\n  return partitionIndex;\n}\n\nfunction swap(array, index1, index2) {\n  var temp = array[index1];\n  array[index1] = array[index2];\n  array[index2] = temp;\n}\n","var array_length;\n\nexport function getHeapSortAnimations(array) {\n  const animations = [];\n  if (array.length < 1) return array;\n  heapSort(array, animations);\n  return animations;\n}\n\nfunction heapify(arr, i, animations) {\n  var left = 2 * i + 1;\n  var right = 2 * i + 2;\n  var max = i;\n  if (left < array_length && arr[left] > arr[max]) {\n    max = left;\n  }\n\n  if (right < array_length && arr[right] > arr[max]) {\n    max = right;\n  }\n\n  if (max != i) {\n    animations.push([i, arr[max]]);\n    animations.push([max, arr[i]]);\n    swap(arr, i, max);\n    heapify(arr, max, animations);\n  }\n}\n\nfunction heapSort(arr, animations) {\n  array_length = arr.length;\n  for (var i = Math.floor(array_length / 2); i >= 0; i--) {\n    heapify(arr, i, animations);\n  }\n\n  for (i = arr.length - 1; i > 0; i--) {\n    animations.push([0, arr[i]]);\n    animations.push([i, arr[0]]);\n    swap(arr, 0, i);\n    array_length--;\n    heapify(arr, 0, animations);\n  }\n}\n\nfunction swap(arr, i, j) {\n  var temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n}\n","export function getBubbleSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  bubbleSort(array, animations);\n  return animations;\n}\n\nfunction bubbleSort(array, animations) {\n  let len = array.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len; j++) {\n      animations.push([i, j]); // Colour\n      animations.push([i, j]); // De-colour\n      if (array[j] > array[j + 1]) {\n        const newHeight = array[j],\n          newHeight2 = array[j + 1];\n        animations.push([j, newHeight2]);\n        animations.push([j + 1, newHeight]);\n        swap(array, j, j + 1);\n      } else {\n        animations.push([null, null]);\n        animations.push([null, null]);\n      }\n    }\n  }\n}\n\nfunction swap(array, index1, index2) {\n  var temp = array[index1];\n  array[index1] = array[index2];\n  array[index2] = temp;\n}\n","export function getSelectionSortAnimations(array) {\n  if (array.length < 1) return array;\n  const animations = [];\n  selectionSort(array, animations);\n  return animations;\n}\n\nfunction selectionSort(array, animations) {\n  let len = array.length;\n  for (let i = 0; i < len; i++) {\n    let min = i;\n    for (let j = i + 1; j < len; j++) {\n      animations.push([min, j]);\n      animations.push([min, j]);\n      if (array[min] > array[j]) {\n        min = j;\n      }\n      animations.push([null, null]);\n      animations.push([null, null]);\n    }\n    if (min !== i) {\n      const newHeight = array[min];\n      const newHeight2 = array[i];\n      animations.push([min, i]);\n      animations.push([min, i]);\n      animations.push([min, newHeight2]);\n      animations.push([i, newHeight]);\n      swap(array, min, i);\n    }\n  }\n}\n\nfunction swap(array, index1, index2) {\n  var temp = array[index1];\n  array[index1] = array[index2];\n  array[index2] = temp;\n}\n","import React from \"react\";\nimport \"./SortingVisualizer.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as MergeSort from \"../SortingAlgorithms/MergeSort.js\";\nimport * as QuickSort from \"../SortingAlgorithms/QuickSort.js\";\nimport { Toolbar } from \"@material-ui/core\";\nimport * as InsertionSort from \"../SortingAlgorithms/InsertionSort.js\";\nimport * as BubbleSort from \"../SortingAlgorithms/BubbleSort.js\";\nimport * as SelectionSort from \"../SortingAlgorithms/SelectionSort.js\";\nimport * as HeapSort from \"../SortingAlgorithms/HeapSort.js\";\n\nclass SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      value: 0,\n    };\n  }\n\n  componentDidMount() {\n    // If refresh page, then reset array\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < 250; i++) {\n      array.push(randomInt(5, 700));\n    }\n    this.setState({ array });\n  }\n\n  mergeSort() {\n    const animations = MergeSort.getMergeSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\"),\n        [a, b] = animations[i],\n        isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const color = i % 3 === 0 ? \"red\" : \"grey\",\n          barOneStyle = arrayBars[a].style,\n          barTwoStyle = arrayBars[b].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.value);\n      } else {\n        setTimeout(() => {\n          const barOneStyle = arrayBars[a].style;\n          barOneStyle.height = `${b}px`;\n        }, i * this.state.value);\n      }\n    }\n  }\n\n  quickSort() {\n    const animations = QuickSort.getQuickSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = 0; i < animations.length; i++) {\n      const [a, b] = animations[i],\n        isColorChange = i % 4 === 0 || i % 4 === 1;\n      if (isColorChange) {\n        const barOneStyle = arrayBars[a].style,\n          barTwoStyle = arrayBars[b].style,\n          color = i % 4 === 0 ? \"blue\" : \"grey\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.value);\n      } else {\n        setTimeout(() => {\n          if (a != null && b != null) {\n            const barStyle = arrayBars[a].style;\n            barStyle.height = `${b}px`;\n          }\n        }, i * this.state.value);\n      }\n    }\n  }\n\n  insertionSort() {\n    const animations = InsertionSort.getInsertionSortAnimations(\n      this.state.array\n    );\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = 0; i < animations.length; i++) {\n      setTimeout(() => {\n        const [barOneIndex, newHeight] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        barOneStyle.height = `${newHeight}px`;\n      }, i * this.state.value);\n    }\n  }\n\n  bubbleSort() {\n    const animations = BubbleSort.getBubbleSortAnimations(this.state.array);\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = 0; i < animations.length; i++) {\n      const [a, b] = animations[i],\n        isColorChange = i % 4 === 0 || i % 4 === 1;\n      if (isColorChange) {\n        const barOneStyle = arrayBars[a].style,\n          barTwoStyle = arrayBars[b].style,\n          color = i % 4 === 0 ? \"yellow\" : \"grey\";\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * this.state.value);\n      } else {\n        setTimeout(() => {\n          if (a != null && b != null) {\n            const barStyle = arrayBars[a].style;\n            barStyle.height = `${b}px`;\n          }\n        }, i * this.state.value);\n      }\n    }\n  }\n\n  selectionSort() {\n    const animations = SelectionSort.getSelectionSortAnimations(\n      this.state.array\n    );\n    console.log(animations);\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = 0; i < animations.length; i++) {\n      const [a, b] = animations[i],\n        isColorChange = i % 4 === 0 || i % 4 === 1;\n      if (isColorChange) {\n        if (a != null && b != null) {\n          const barOneStyle = arrayBars[a].style,\n            barTwoStyle = arrayBars[b].style,\n            color = i % 4 === 0 ? \"lime\" : \"grey\";\n          setTimeout(() => {\n            barOneStyle.backgroundColor = color;\n            barTwoStyle.backgroundColor = color;\n          }, i * this.state.value);\n        }\n      } else {\n        setTimeout(() => {\n          if (a != null && b != null) {\n            const barStyle = arrayBars[a].style;\n            barStyle.height = `${b}px`;\n          }\n        }, i * this.state.value);\n      }\n    }\n  }\n\n  heapSort() {\n    const animations = HeapSort.getHeapSortAnimations(this.state.array);\n    // console.log(animations);\n    // const sorted = this.state.array.sort((a, b) => a - b);\n    // console.log(areArraysEqual(animations, sorted));\n    const arrayBars = document.getElementsByClassName(\"array-bar\");\n    for (let i = 0; i < animations.length; i++) {\n      setTimeout(() => {\n        const [barOneIndex, newHeight] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        barOneStyle.height = `${newHeight}px`;\n      }, i * this.state.value);\n    }\n  }\n\n  handleSliderChange = (event, newValue) => {\n    this.setState({ value: newValue });\n  };\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <div className=\"array-container\">\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <Typography align=\"center\">Sorting Visualizer</Typography>\n          </Toolbar>\n        </AppBar>\n        {array.map((value, index) => (\n          //In React, must put key properties in values/elements rendered in an iterable\n          <div\n            className=\"array-bar\"\n            key={index}\n            style={{ height: `${value}px`, backgroundColor: \"grey\" }}\n          />\n        ))}{\" \"}\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => this.resetArray()}\n            style={{ margin: 5 }}\n          >\n            Generate new array\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.mergeSort()}\n            style={{ margin: 5 }}\n          >\n            Merge sort\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.quickSort()}\n            style={{ margin: 5 }}\n          >\n            Quick sort\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.insertionSort()}\n            style={{ margin: 5 }}\n          >\n            Insertion sort\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.bubbleSort()}\n            style={{ margin: 5 }}\n          >\n            Bubble sort\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.selectionSort()}\n            style={{ margin: 5 }}\n          >\n            Selection sort\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.heapSort()}\n            style={{ margin: 5 }}\n          >\n            Heap sort\n          </Button>\n        </div>\n        <Typography id=\"input-slider\" gutterBottom>\n          Speed\n        </Typography>\n        <Grid container spacing={2} alignItems=\"center\"></Grid>\n        <Grid item xs>\n          <Slider\n            value={typeof this.state.value === \"number\" ? this.state.value : 0}\n            onChange={this.handleSliderChange}\n            min={0}\n            max={10}\n            step={0.5}\n            marks={true}\n            style={{ width: 250 }}\n            aria-labelledby=\"input-slider\"\n          ></Slider>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction areArraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n  return true;\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport default SortingVisualizer;\n","export function getInsertionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  insertionSort(array, animations);\n  return animations;\n}\n\nfunction insertionSort(array, animations) {\n  for (let i = 1; i < array.length; i++) {\n    let j = i - 1,\n      temp = array[i];\n    const newHeight = array[i];\n    while (j >= 0 && array[j] > temp) {\n      const newHeight2 = array[j];\n      animations.push([j + 1, newHeight2]);\n      array[j + 1] = array[j];\n      j--;\n    }\n    animations.push([j + 1, newHeight]);\n    array[j + 1] = temp;\n  }\n}\n","import React from \"react\";\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}